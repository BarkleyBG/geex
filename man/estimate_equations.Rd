% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computations.R
\name{estimate_equations}
\alias{estimate_equations}
\title{Estimate parameters and their covariance from a set of estimating equations}
\usage{
estimate_equations(eeFUN, data, units = NULL, roots = NULL,
  outer_eeargs = NULL, inner_eeargs = NULL, compute_roots = TRUE,
  compute_vcov = TRUE, corrections_list = NULL,
  derivFUN = numDeriv::jacobian, derivFUN_control = list(method =
  "Richardson"), rootFUN = rootSolve::multiroot, rootFUN_control = NULL,
  rootFUN_object = "root", approxFUN = NULL, approxFUN_control = NULL)
}
\arguments{
\item{eeFUN}{a function that takes in group-level data and returns a function
that takes parameters as its first argument}

\item{data}{a data.frame}

\item{units}{a string identifying the grouping variable in \code{data}}

\item{roots}{a numeric vector containing either starting values for the roots when using
the default \code{rootsolver} or roots that have been estimated elsewhere}

\item{outer_eeargs}{a list of arguments passed to the outer (data) function of \code{eeFUN}. (optional)}

\item{inner_eeargs}{a list of arguments passed to the inner (theta) function of \code{eeFUN}. (optional)}

\item{compute_roots}{whether or not to find the roots of the estimating equations.
Defaults to \code{TRUE}.}

\item{compute_vcov}{whether or not to compute the variance-covariance matrix.
Defaults to \code{TRUE}.}

\item{corrections_list}{an optional list of small sample corrections where each
list element is a list with two elements: `fun` and `options`. See details.}

\item{derivFUN}{the function used to take derivatives of the estimating equation functions.
Defaults to \code{numDeriv::jacobian}}

\item{derivFUN_control}{a list of options passed to \code{\link[numDeriv]{jacobian}}
(or the \code{derivFUN} function).}

\item{rootFUN}{the function used to find roots of the estimating equations.
Defaults to \code{\link[rootSolve]{multiroot}}.}

\item{rootFUN_control}{a list of options to be passed to the \code{rootsolver}
function}

\item{rootFUN_object}{the name of the object within the output of \code{rootFUN} that contains
the parameters estimates. For example, the 'root' object within the output of multiroot::rootSolve
contains the parameter estimates. Defaults to 'root'. Can also be a set of numeric positions within
the object.}

\item{approxFUN}{a function that approximates the inner function of \code{eeFUN}}

\item{approxFUN_control}{arguments passed to \code{approxFUN}}
}
\value{
a list with the following
\itemize{
\item \code{parameters} - a vector of estimated parameters
\item \code{vcov} - the variance-covariance matrix for the parameters
\item \code{corrections} - a list of corrected variance-covariance matrices
}
}
\description{
Estimate parameters and their covariance from a set of estimating equations
}
\details{

}
\section{eeFUN arguments}{


Additional arguments may be passed to both the inner and outer function of the `eeFUN`.
Any arguments in `...` are passed to the outer function; any elements of the `ee_args` list
are passed to the inner function. For example, a practical example might be computing a
counterfactual mean using an IPW estimator:

\preformatted{
myeeFUN <- function(data, model){
  X <- model.matrix(model, data = data) #covariates
  A <- data$A #treatment
  Y <- data$Y #outcome
  p <- ncol(X) #number of parameters in model
  function(theta, a){
    Y * (A == a) * 1/plogis(X \%*\% theta[p - 1]) - theta[p]
    # Here theta[p] is the target parameter.
  }
}
}

Then to estimate the mean where `a == 1`:

\preformatted{
estimate_equations(
  eeFUN = myeeFUN,
  data  = mydata,
  units = myunits,
  ee_args = list(a = 1),
  model = mymodel
)
}
}

